{"repository_name":"github.com/crespyl/Advent-of-Code-2019","body":"# Advent of Code 2019\n\nI've decided to take the opportunity to learn a bit of\n[Crystal](https://crystal-lang.org) during this years Advent of Code.\n\nMost solutions are written in Ruby first since I can do that quickly, then\nported to Crystal (which is usually trivial).\n\nDepends on Crystal, Ruby, and [redo](https://redo.readthedocs.io/en/latest/)\nfor the build.\n","program":{"html_id":"github.com/crespyl/Advent-of-Code-2019/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/crespyl/Advent-of-Code-2019","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/crespyl/Advent-of-Code-2019/Intcode","path":"Intcode.html","kind":"module","full_name":"Intcode","name":"Intcode","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/opcodes.cr","line_number":3,"url":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/opcodes.cr"},{"filename":"lib/vm.cr","line_number":3,"url":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/vm.cr"},{"filename":"lib/intcode.cr","line_number":6,"url":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/intcode.cr"}],"repository_name":"github.com/crespyl/Advent-of-Code-2019","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"OPCODES","name":"OPCODES","value":"{1 => Opcode.new(:add, 4, ->(vm : VM, params : Array(Parameter)) do\n  x, y, dest = params\n  vm.write_param_value(dest, (vm.read_param(x)) + (vm.read_param(y)))\n  vm.pc = vm.pc + (params.size + 1)\nend, ->(vm : VM, params : Array(Parameter)) do\n  \"ADD %5s, %5s -> %5s\" % params.map do |p|\n    p.debug\n  end\nend), 2 => Opcode.new(:mul, 4, ->(vm : VM, params : Array(Parameter)) do\n  x, y, dest = params\n  vm.write_param_value(dest, (vm.read_param(x)) * (vm.read_param(y)))\n  vm.pc = vm.pc + (params.size + 1)\nend, ->(vm : VM, params : Array(Parameter)) do\n  \"MUL %5s, %5s -> %5s\" % params.map do |p|\n    p.debug\n  end\nend), 3 => Opcode.new(:input, 2, ->(vm : VM, params : Array(Parameter)) do\n  dest = params.first\n  if input = vm.get_input\n    vm.write_param_value(dest, input)\n    vm.pc = vm.pc + (params.size + 1)\n  else\n    0\n  end\nend, ->(vm : VM, params : Array(Parameter)) do\n  \"IN  -> %5s\" % params.map do |p|\n    p.debug\n  end\nend), 4 => Opcode.new(:output, 2, ->(vm : VM, params : Array(Parameter)) do\n  x = params.first\n  vm.write_output(vm.read_param(x))\n  vm.pc = vm.pc + (params.size + 1)\nend, ->(vm : VM, params : Array(Parameter)) do\n  \"OUT %5s\" % params.map do |p|\n    p.debug\n  end\nend), 5 => Opcode.new(:jt, 3, ->(vm : VM, params : Array(Parameter)) do\n  x, dest = params\n  if (vm.read_param(x)) != 0\n    vm.pc = vm.read_param(dest)\n  else\n    vm.pc = vm.pc + (params.size + 1)\n  end\nend, ->(vm : VM, params : Array(Parameter)) do\n  \"JT  %5s, %5s\" % params.map do |p|\n    p.debug\n  end\nend), 6 => Opcode.new(:jf, 3, ->(vm : VM, params : Array(Parameter)) do\n  x, dest = params\n  if (vm.read_param(x)) == 0\n    vm.pc = vm.read_param(dest)\n  else\n    vm.pc = vm.pc + (params.size + 1)\n  end\nend, ->(vm : VM, params : Array(Parameter)) do\n  \"JF  %5s, %5s\" % params.map do |p|\n    p.debug\n  end\nend), 7 => Opcode.new(:lt, 4, ->(vm : VM, params : Array(Parameter)) do\n  x, y, dest = params\n  if (vm.read_param(x)) < (vm.read_param(y))\n    vm.write_param_value(dest, 1)\n  else\n    vm.write_param_value(dest, 0)\n  end\n  vm.pc = vm.pc + (params.size + 1)\nend, ->(vm : VM, params : Array(Parameter)) do\n  \"LT  %5s, %5s -> %5s\" % params.map do |p|\n    p.debug\n  end\nend), 8 => Opcode.new(:eq, 4, ->(vm : VM, params : Array(Parameter)) do\n  x, y, dest = params\n  if (vm.read_param(x)) == (vm.read_param(y))\n    vm.write_param_value(dest, 1)\n  else\n    vm.write_param_value(dest, 0)\n  end\n  vm.pc = vm.pc + 4\nend, ->(vm : VM, params : Array(Parameter)) do\n  \"EQ  %5s, %5s -> %5s\" % params.map do |p|\n    p.debug\n  end\nend), 99 => Opcode.new(:halt, 1, ->(vm : VM, params : Array(Parameter)) do\n  vm.halted = true\n  1\nend, ->(vm : VM, params : Array(Parameter)) do\n  \"HALT\"\nend)}","doc":"Here we define the mapping from integer to `Opcode`, along with the actual\nimplementation of each as a `Proc`","summary":"<p>Here we define the mapping from integer to <code><a href=\"Intcode/Opcode.html\">Opcode</a></code>, along with the actual implementation of each as a <code>Proc</code></p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"This module defines the \"Intcode\" interpreter and several utility functions\nfor dealing with opcodes and parameter handling","summary":"<p>This module defines the \"Intcode\" interpreter and several utility functions for dealing with opcodes and parameter handling</p>","class_methods":[{"id":"load_file(filename)-class-method","html_id":"load_file(filename)-class-method","name":"load_file","doc":"Load an Intcode program from a filename, returned as an array of Integers","summary":"<p>Load an Intcode program from a filename, returned as an array of Integers</p>","abstract":false,"args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":""}],"args_string":"(filename)","source_link":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/intcode.cr#L17","def":{"name":"load_file","args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"read_intcode(File.read(filename))"}},{"id":"log(msg)-class-method","html_id":"log(msg)-class-method","name":"log","doc":null,"summary":null,"abstract":false,"args":[{"name":"msg","doc":null,"default_value":"","external_name":"msg","restriction":""}],"args_string":"(msg)","source_link":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/intcode.cr#L26","def":{"name":"log","args":[{"name":"msg","doc":null,"default_value":"","external_name":"msg","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @@DEBUG\n  puts(msg)\nend"}},{"id":"read_intcode(str)-class-method","html_id":"read_intcode(str)-class-method","name":"read_intcode","doc":"Parse the input string into an array of integers","summary":"<p>Parse the input string into an array of integers</p>","abstract":false,"args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":""}],"args_string":"(str)","source_link":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/intcode.cr#L10","def":{"name":"read_intcode","args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(str.split(',')).map do |s|\n  s.to_i\nend.reject do |x|\n  !x.is_a?(Int32)\nend"}},{"id":"set_debug(enable_debug)-class-method","html_id":"set_debug(enable_debug)-class-method","name":"set_debug","doc":"Enable or disable verbose debug logging during execution","summary":"<p>Enable or disable verbose debug logging during execution</p>","abstract":false,"args":[{"name":"enable_debug","doc":null,"default_value":"","external_name":"enable_debug","restriction":""}],"args_string":"(enable_debug)","source_link":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/intcode.cr#L22","def":{"name":"set_debug","args":[{"name":"enable_debug","doc":null,"default_value":"","external_name":"enable_debug","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@DEBUG = enable_debug"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/crespyl/Advent-of-Code-2019/Intcode/Opcode","path":"Intcode/Opcode.html","kind":"class","full_name":"Intcode::Opcode","name":"Opcode","abstract":false,"superclass":{"html_id":"github.com/crespyl/Advent-of-Code-2019/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/crespyl/Advent-of-Code-2019/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/crespyl/Advent-of-Code-2019/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/opcodes.cr","line_number":7,"url":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/opcodes.cr"}],"repository_name":"github.com/crespyl/Advent-of-Code-2019","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crespyl/Advent-of-Code-2019/Intcode","kind":"module","full_name":"Intcode","name":"Intcode"},"doc":"Each supported opcode is represented as instance of the Opcode class, with\nthe implementation attached as a Proc, along with a function to generate\nsimplistic human-readable string for debugging","summary":"<p>Each supported opcode is represented as instance of the Opcode class, with the implementation attached as a Proc, along with a function to generate simplistic human-readable string for debugging</p>","class_methods":[{"id":"get_opcode_and_params(vm:VM,address:Int32)-class-method","html_id":"get_opcode_and_params(vm:VM,address:Int32)-class-method","name":"get_opcode_and_params","doc":"Returns a tuple with the `Opcode` corresponding to the instruction at the\n*address* and an array holding the `Parameter`s that follow it","summary":"<p>Returns a tuple with the <code><a href=\"../Intcode/Opcode.html\">Opcode</a></code> corresponding to the instruction at the <em>address</em> and an array holding the <code><a href=\"../Intcode/Parameter.html\">Parameter</a></code>s that follow it</p>","abstract":false,"args":[{"name":"vm","doc":null,"default_value":"","external_name":"vm","restriction":"VM"},{"name":"address","doc":null,"default_value":"","external_name":"address","restriction":"Int32"}],"args_string":"(vm : VM, address : Int32)","source_link":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/opcodes.cr#L36","def":{"name":"get_opcode_and_params","args":[{"name":"vm","doc":null,"default_value":"","external_name":"vm","restriction":"VM"},{"name":"address","doc":null,"default_value":"","external_name":"address","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"instr = vm.mem[address]\nopcode, modes = get_opcode_and_modes(instr)\n{opcode, modes.map_with_index do |m, i|\n  Parameter.new(m, vm.mem[(address + i) + 1])\nend}\n"}}],"constructors":[{"id":"new(sym,size,impl,disasm)-class-method","html_id":"new(sym,size,impl,disasm)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"sym","doc":null,"default_value":"","external_name":"sym","restriction":""},{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""},{"name":"impl","doc":null,"default_value":"","external_name":"impl","restriction":""},{"name":"disasm","doc":null,"default_value":"","external_name":"disasm","restriction":""}],"args_string":"(sym, size, impl, disasm)","source_link":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/opcodes.cr#L13","def":{"name":"new","args":[{"name":"sym","doc":null,"default_value":"","external_name":"sym","restriction":""},{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""},{"name":"impl","doc":null,"default_value":"","external_name":"impl","restriction":""},{"name":"disasm","doc":null,"default_value":"","external_name":"disasm","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(sym, size, impl, disasm)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"debug(vm,params)-instance-method","html_id":"debug(vm,params)-instance-method","name":"debug","doc":"Return a (more or less) human-readable string describing this instruction","summary":"<p>Return a (more or less) human-readable string describing this instruction</p>","abstract":false,"args":[{"name":"vm","doc":null,"default_value":"","external_name":"vm","restriction":""},{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""}],"args_string":"(vm, params)","source_link":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/opcodes.cr#L30","def":{"name":"debug","args":[{"name":"vm","doc":null,"default_value":"","external_name":"vm","restriction":""},{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"disasm.call(vm, params)"}},{"id":"disasm:Proc(VM,Array(Parameter),String)-instance-method","html_id":"disasm:Proc(VM,Array(Parameter),String)-instance-method","name":"disasm","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Proc(VM, Array(Parameter), String)","source_link":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/opcodes.cr#L13","def":{"name":"disasm","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Proc(VM, Array(Parameter), String)","visibility":"Public","body":"@disasm"}},{"id":"disasm=(disasm:Proc(VM,Array(Parameter),String))-instance-method","html_id":"disasm=(disasm:Proc(VM,Array(Parameter),String))-instance-method","name":"disasm=","doc":null,"summary":null,"abstract":false,"args":[{"name":"disasm","doc":null,"default_value":"","external_name":"disasm","restriction":"Proc(VM, Array(Parameter), String)"}],"args_string":"(disasm : Proc(VM, Array(Parameter), String))","source_link":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/opcodes.cr#L17","def":{"name":"disasm=","args":[{"name":"disasm","doc":null,"default_value":"","external_name":"disasm","restriction":"Proc(VM, Array(Parameter), String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@disasm = disasm"}},{"id":"exec(vm,params)-instance-method","html_id":"exec(vm,params)-instance-method","name":"exec","doc":"Execute this opcode in the context of the given VM, with the provided\nparams.  Delagates to the attached Proc.","summary":"<p>Execute this opcode in the context of the given VM, with the provided params.</p>","abstract":false,"args":[{"name":"vm","doc":null,"default_value":"","external_name":"vm","restriction":""},{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""}],"args_string":"(vm, params)","source_link":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/opcodes.cr#L25","def":{"name":"exec","args":[{"name":"vm","doc":null,"default_value":"","external_name":"vm","restriction":""},{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"impl.call(vm, params)"}},{"id":"impl:Proc(VM,Array(Parameter),Int32)-instance-method","html_id":"impl:Proc(VM,Array(Parameter),Int32)-instance-method","name":"impl","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Proc(VM, Array(Parameter), Int32)","source_link":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/opcodes.cr#L12","def":{"name":"impl","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Proc(VM, Array(Parameter), Int32)","visibility":"Public","body":"@impl"}},{"id":"impl=(impl:Proc(VM,Array(Parameter),Int32))-instance-method","html_id":"impl=(impl:Proc(VM,Array(Parameter),Int32))-instance-method","name":"impl=","doc":null,"summary":null,"abstract":false,"args":[{"name":"impl","doc":null,"default_value":"","external_name":"impl","restriction":"Proc(VM, Array(Parameter), Int32)"}],"args_string":"(impl : Proc(VM, Array(Parameter), Int32))","source_link":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/opcodes.cr#L16","def":{"name":"impl=","args":[{"name":"impl","doc":null,"default_value":"","external_name":"impl","restriction":"Proc(VM, Array(Parameter), Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@impl = impl"}},{"id":"num_params-instance-method","html_id":"num_params-instance-method","name":"num_params","doc":"We use opcode size to indicate both how far the PC should move after\nexecution and the number of parameters. Number of parameters is always\n`size-1` since size includes the instruction itself.","summary":"<p>We use opcode size to indicate both how far the PC should move after execution and the number of parameters.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/opcodes.cr#L19","def":{"name":"num_params","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"size - 1"}},{"id":"size:Int32-instance-method","html_id":"size:Int32-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/opcodes.cr#L11","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@size"}},{"id":"size=(size:Int32)-instance-method","html_id":"size=(size:Int32)-instance-method","name":"size=","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"}],"args_string":"(size : Int32)","source_link":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/opcodes.cr#L15","def":{"name":"size=","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@size = size"}},{"id":"sym:Symbol-instance-method","html_id":"sym:Symbol-instance-method","name":"sym","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Symbol","source_link":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/opcodes.cr#L10","def":{"name":"sym","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Symbol","visibility":"Public","body":"@sym"}},{"id":"sym=(sym:Symbol)-instance-method","html_id":"sym=(sym:Symbol)-instance-method","name":"sym=","doc":null,"summary":null,"abstract":false,"args":[{"name":"sym","doc":null,"default_value":"","external_name":"sym","restriction":"Symbol"}],"args_string":"(sym : Symbol)","source_link":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/opcodes.cr#L14","def":{"name":"sym=","args":[{"name":"sym","doc":null,"default_value":"","external_name":"sym","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@sym = sym"}}],"macros":[],"types":[]},{"html_id":"github.com/crespyl/Advent-of-Code-2019/Intcode/Parameter","path":"Intcode/Parameter.html","kind":"struct","full_name":"Intcode::Parameter","name":"Parameter","abstract":false,"superclass":{"html_id":"github.com/crespyl/Advent-of-Code-2019/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/crespyl/Advent-of-Code-2019/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/crespyl/Advent-of-Code-2019/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/crespyl/Advent-of-Code-2019/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/intcode.cr","line_number":32,"url":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/intcode.cr"}],"repository_name":"github.com/crespyl/Advent-of-Code-2019","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crespyl/Advent-of-Code-2019/Intcode","kind":"module","full_name":"Intcode","name":"Intcode"},"doc":"Represents an encoded parameter and its addressing mode, used by both the VM\nand Opcodes","summary":"<p>Represents an encoded parameter and its addressing mode, used by both the VM and Opcodes</p>","class_methods":[],"constructors":[{"id":"new(mode,val)-class-method","html_id":"new(mode,val)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"mode","doc":null,"default_value":"","external_name":"mode","restriction":""},{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"args_string":"(mode, val)","source_link":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/intcode.cr#L36","def":{"name":"new","args":[{"name":"mode","doc":null,"default_value":"","external_name":"mode","restriction":""},{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(mode, val)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"debug-instance-method","html_id":"debug-instance-method","name":"debug","doc":"Return a debug string indicating the mode and value, used for debug and\ndisasm","summary":"<p>Return a debug string indicating the mode and value, used for debug and disasm</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/intcode.cr#L40","def":{"name":"debug","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case mode\nwhen :position\n  \"@#{val}\"\nwhen :literal\n  \"#{val}\"\nelse\n  \"?#{mode}:#{val}\"\nend"}},{"id":"mode:Symbol-instance-method","html_id":"mode:Symbol-instance-method","name":"mode","doc":"The original value in memory","summary":"<p>The original value in memory</p>","abstract":false,"args":[],"args_string":" : Symbol","source_link":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/intcode.cr#L36","def":{"name":"mode","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Symbol","visibility":"Public","body":"@mode"}},{"id":"mode=(mode:Symbol)-instance-method","html_id":"mode=(mode:Symbol)-instance-method","name":"mode=","doc":"The original value in memory","summary":"<p>The original value in memory</p>","abstract":false,"args":[{"name":"mode","doc":null,"default_value":"","external_name":"mode","restriction":"Symbol"}],"args_string":"(mode : Symbol)","source_link":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/intcode.cr#L40","def":{"name":"mode=","args":[{"name":"mode","doc":null,"default_value":"","external_name":"mode","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mode = mode"}},{"id":"val:Int32-instance-method","html_id":"val:Int32-instance-method","name":"val","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/intcode.cr#L35","def":{"name":"val","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@val"}},{"id":"val=(val:Int32)-instance-method","html_id":"val=(val:Int32)-instance-method","name":"val=","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Int32"}],"args_string":"(val : Int32)","source_link":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/intcode.cr#L39","def":{"name":"val=","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@val = val"}}],"macros":[],"types":[]},{"html_id":"github.com/crespyl/Advent-of-Code-2019/Intcode/VM","path":"Intcode/VM.html","kind":"class","full_name":"Intcode::VM","name":"VM","abstract":false,"superclass":{"html_id":"github.com/crespyl/Advent-of-Code-2019/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/crespyl/Advent-of-Code-2019/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/crespyl/Advent-of-Code-2019/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/vm.cr","line_number":7,"url":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/vm.cr"}],"repository_name":"github.com/crespyl/Advent-of-Code-2019","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crespyl/Advent-of-Code-2019/Intcode","kind":"module","full_name":"Intcode","name":"Intcode"},"doc":"This class holds the current state of a running interpreter: the memory\n(`Array(Int32)`), the program counter, and a \"halted/running\" flag, and\nbuffers for input/output values.","summary":"<p>This class holds the current state of a running interpreter: the memory (<code>Array(Int32)</code>), the program counter, and a \"halted/running\" flag, and buffers for input/output values.</p>","class_methods":[{"id":"from_file(filename)-class-method","html_id":"from_file(filename)-class-method","name":"from_file","doc":null,"summary":null,"abstract":false,"args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":""}],"args_string":"(filename)","source_link":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/vm.cr#L144","def":{"name":"from_file","args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"VM.new(Intcode.load_file(filename))"}},{"id":"from_string(str)-class-method","html_id":"from_string(str)-class-method","name":"from_string","doc":null,"summary":null,"abstract":false,"args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":""}],"args_string":"(str)","source_link":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/vm.cr#L148","def":{"name":"from_string","args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"VM.new(Intcode.read_intcode(str))"}}],"constructors":[{"id":"new(mem)-class-method","html_id":"new(mem)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"mem","doc":null,"default_value":"","external_name":"mem","restriction":""}],"args_string":"(mem)","source_link":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/vm.cr#L32","def":{"name":"new","args":[{"name":"mem","doc":null,"default_value":"","external_name":"mem","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(mem)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"halted:Bool-instance-method","html_id":"halted:Bool-instance-method","name":"halted","doc":"Indicates whether the machine has executed a HALT instruction","summary":"<p>Indicates whether the machine has executed a HALT instruction</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/vm.cr#L24","def":{"name":"halted","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@halted"}},{"id":"halted=(halted:Bool)-instance-method","html_id":"halted=(halted:Bool)-instance-method","name":"halted=","doc":"Indicates whether the machine has executed a HALT instruction","summary":"<p>Indicates whether the machine has executed a HALT instruction</p>","abstract":false,"args":[{"name":"halted","doc":null,"default_value":"","external_name":"halted","restriction":"Bool"}],"args_string":"(halted : Bool)","source_link":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/vm.cr#L28","def":{"name":"halted=","args":[{"name":"halted","doc":null,"default_value":"","external_name":"halted","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@halted = halted"}},{"id":"inputs:Array(Int32)-instance-method","html_id":"inputs:Array(Int32)-instance-method","name":"inputs","doc":"Input buffer","summary":"<p>Input buffer</p>","abstract":false,"args":[],"args_string":" : Array(Int32)","source_link":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/vm.cr#L30","def":{"name":"inputs","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"@inputs"}},{"id":"inputs=(inputs:Array(Int32))-instance-method","html_id":"inputs=(inputs:Array(Int32))-instance-method","name":"inputs=","doc":"Input buffer","summary":"<p>Input buffer</p>","abstract":false,"args":[{"name":"inputs","doc":null,"default_value":"","external_name":"inputs","restriction":"Array(Int32)"}],"args_string":"(inputs : Array(Int32))","source_link":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/vm.cr#L34","def":{"name":"inputs=","args":[{"name":"inputs","doc":null,"default_value":"","external_name":"inputs","restriction":"Array(Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@inputs = inputs"}},{"id":"mem:Array(Int32)-instance-method","html_id":"mem:Array(Int32)-instance-method","name":"mem","doc":"Memory","summary":"<p>Memory</p>","abstract":false,"args":[],"args_string":" : Array(Int32)","source_link":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/vm.cr#L14","def":{"name":"mem","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"@mem"}},{"id":"mem=(mem:Array(Int32))-instance-method","html_id":"mem=(mem:Array(Int32))-instance-method","name":"mem=","doc":"Memory","summary":"<p>Memory</p>","abstract":false,"args":[{"name":"mem","doc":null,"default_value":"","external_name":"mem","restriction":"Array(Int32)"}],"args_string":"(mem : Array(Int32))","source_link":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/vm.cr#L18","def":{"name":"mem=","args":[{"name":"mem","doc":null,"default_value":"","external_name":"mem","restriction":"Array(Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mem = mem"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":"Name for debugging","summary":"<p>Name for debugging</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/vm.cr#L11","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@name"}},{"id":"name=(name:String)-instance-method","html_id":"name=(name:String)-instance-method","name":"name=","doc":"Name for debugging","summary":"<p>Name for debugging</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String)","source_link":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/vm.cr#L15","def":{"name":"name=","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name = name"}},{"id":"needs_input:Bool-instance-method","html_id":"needs_input:Bool-instance-method","name":"needs_input","doc":"Indicates whether the machine is blocked waiting on input","summary":"<p>Indicates whether the machine is blocked waiting on input</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/vm.cr#L27","def":{"name":"needs_input","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@needs_input"}},{"id":"needs_input=(needs_input:Bool)-instance-method","html_id":"needs_input=(needs_input:Bool)-instance-method","name":"needs_input=","doc":"Indicates whether the machine is blocked waiting on input","summary":"<p>Indicates whether the machine is blocked waiting on input</p>","abstract":false,"args":[{"name":"needs_input","doc":null,"default_value":"","external_name":"needs_input","restriction":"Bool"}],"args_string":"(needs_input : Bool)","source_link":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/vm.cr#L31","def":{"name":"needs_input=","args":[{"name":"needs_input","doc":null,"default_value":"","external_name":"needs_input","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@needs_input = needs_input"}},{"id":"outputs:Array(Int32)-instance-method","html_id":"outputs:Array(Int32)-instance-method","name":"outputs","doc":"Output buffer","summary":"<p>Output buffer</p>","abstract":false,"args":[],"args_string":" : Array(Int32)","source_link":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/vm.cr#L32","def":{"name":"outputs","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"@outputs"}},{"id":"outputs=(outputs:Array(Int32))-instance-method","html_id":"outputs=(outputs:Array(Int32))-instance-method","name":"outputs=","doc":"Output buffer","summary":"<p>Output buffer</p>","abstract":false,"args":[{"name":"outputs","doc":null,"default_value":"","external_name":"outputs","restriction":"Array(Int32)"}],"args_string":"(outputs : Array(Int32))","source_link":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/vm.cr#L36","def":{"name":"outputs=","args":[{"name":"outputs","doc":null,"default_value":"","external_name":"outputs","restriction":"Array(Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@outputs = outputs"}},{"id":"pc:Int32-instance-method","html_id":"pc:Int32-instance-method","name":"pc","doc":"The program counter, the address in memory to read the next instruction","summary":"<p>The program counter, the address in memory to read the next instruction</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/vm.cr#L19","def":{"name":"pc","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@pc"}},{"id":"pc=(pc:Int32)-instance-method","html_id":"pc=(pc:Int32)-instance-method","name":"pc=","doc":"The program counter, the address in memory to read the next instruction","summary":"<p>The program counter, the address in memory to read the next instruction</p>","abstract":false,"args":[{"name":"pc","doc":null,"default_value":"","external_name":"pc","restriction":"Int32"}],"args_string":"(pc : Int32)","source_link":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/vm.cr#L23","def":{"name":"pc=","args":[{"name":"pc","doc":null,"default_value":"","external_name":"pc","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@pc = pc"}},{"id":"read_output-instance-method","html_id":"read_output-instance-method","name":"read_output","doc":"Read a value from the amps output buffer, or nil if the buffer is empty","summary":"<p>Read a value from the amps output buffer, or nil if the buffer is empty</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/vm.cr#L116","def":{"name":"read_output","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"outputs.shift?"}},{"id":"run-instance-method","html_id":"run-instance-method","name":"run","doc":"Run the machine until it stops for some reason\n\nReturns a Symbol with the machine status after execution stops for any\nreason, see `VM#status` for details","summary":"<p>Run the machine until it stops for some reason</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/vm.cr#L66","def":{"name":"run","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"log(\"Running...\")\nwhile status == (:ok)\n  opcode, params = Opcode.get_opcode_and_params(self, pc)\n  if opcode\n  else\n    raise(\"INVALID OPCODE AT #{pc}: #{mem[pc]}\")\n  end\n  log(\"%5i %05i: %s\" % [pc, mem[pc], opcode.debug(self, params)])\n  opcode.exec(self, params)\nend\nlog(\"Stopped\")\nreturn status\n"}},{"id":"send_input(val:Int32)-instance-method","html_id":"send_input(val:Int32)-instance-method","name":"send_input","doc":"Add a value to the back of the input buffer","summary":"<p>Add a value to the back of the input buffer</p>","abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Int32"}],"args_string":"(val : Int32)","source_link":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/vm.cr#L110","def":{"name":"send_input","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"inputs << val\n@needs_input = false\n"}},{"id":"status-instance-method","html_id":"status-instance-method","name":"status","doc":"Get the status of the VM\n\nResult can be any of the following\n\n  `:halted` => the machine executed a HALT instruction and will not run any\n  further\n\n  `:needs_input` => the machine attempted to execut an INPUT instruction\n  while the input buffer was empty. The machine can be resumed after\n  adding input to the buffer with `VM#send_input`\n\n  `:pc_range_err` => the program counter ran past the end of the machines\n  memory\n\n  `:ok` => the machine is ready to execute","summary":"<p>Get the status of the VM</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crespyl/Advent-of-Code-2019/blob/6f2d31bec9f18b8485fafde01f48247fee3825d7/lib/vm.cr#L97","def":{"name":"status","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @halted\n  :halted\nelse\n  if @needs_input\n    :needs_input\n  else\n    if @pc >= @mem.size\n      :pc_range_err\n    else\n      :ok\n    end\n  end\nend"}}],"macros":[],"types":[]}]}]}}